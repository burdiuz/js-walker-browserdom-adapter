{"version":3,"file":"browser-dom-adapter.min.js","sources":["../source/index.js"],"sourcesContent":["const isList = (node) => (\r\n  node instanceof Array\r\n  || node instanceof HTMLCollection\r\n  || node instanceof NodeList\r\n);\r\n\r\nconst toList = (...args) => {\r\n  const { length } = args;\r\n  const [node] = args;\r\n\r\n  if (length === 1 && isList(node)) {\r\n    return node;\r\n  }\r\n\r\n  const list = [];\r\n\r\n  for (let index = 0; index < length; index++) {\r\n    const part = args[index];\r\n    if (isList(part)) {\r\n      list.push.call(part);\r\n    } else {\r\n      list.push(part);\r\n    }\r\n  }\r\n\r\n  return list;\r\n};\r\n\r\nconst isNode = (node) => node instanceof HTMLElement;\r\n\r\nconst toNode = (node) => {\r\n  // if list we use only first node\r\n  if (isList(node)) {\r\n    return node.length ? node[0] : null;\r\n  }\r\n\r\n  return isNode(node) ? node : null;\r\n};\r\n\r\nconst getNodeAt = (list, index = 0) => {\r\n  if (isList(list)) {\r\n    return list[index];\r\n  }\r\n\r\n  return list;\r\n};\r\n\r\nconst getLength = (list) => list.length;\r\n\r\n// Node\r\nconst getChildren = (node) => {\r\n  node = toNode(node);\r\n\r\n  // if not a node, return empty list\r\n  return isNode(node) ? node.children : toList();\r\n};\r\n\r\nconst getChildrenByName = (node, name) => {\r\n  name = name.toLowerCase();\r\n  const children = getChildren(node);\r\n  const { length } = children;\r\n\r\n  if (!length) {\r\n    return children;\r\n  }\r\n\r\n  const list = [];\r\n\r\n  for (let index = 0; index < children.length; index++) {\r\n    const child = children[index];\r\n    if (child.nodeName.toLowerCase() === name) {\r\n      list.push(child);\r\n    }\r\n  }\r\n\r\n  return list;\r\n};\r\n\r\nconst hasChildren = (node) => !!toNode(node).childElementCount;\r\n\r\nconst hasChild = (node, name) => {\r\n  const children = getChildren(node);\r\n  const { length } = children;\r\n\r\n  for (let index = 0; index < length; index++) {\r\n    if (children[index].nodeName === name) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nconst getChildAt = (node, index) => getChildren(node)[index];\r\n\r\nconst getAttributes = (node) => {\r\n  node = toNode(node);\r\n  if (node.hasAttributes()) {\r\n    return node.attributes;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst hasAttribute = (node, name) => toNode(node).hasAttribute(name);\r\n\r\nconst getAttributeValue = (node, name) => toNode(node).getAttribute(name);\r\n\r\nconst getName = (node) => toNode(node).nodeName;\r\n\r\nconst getText = (node) => toNode(node).innerText;\r\n\r\nconst getNodeParent = (node) => toNode(node).parentNode;\r\n\r\nconst getNodeRoot = (node) => toNode(node).getRootNode();\r\n\r\nconst validateRoot = (root) => {\r\n  if (root === undefined || root === document) {\r\n    return document.firstElementChild;\r\n  } else if (typeof root === 'string') {\r\n    return document.querySelector(root);\r\n  }\r\n\r\n  return root;\r\n};\r\n\r\nexport default {\r\n  isList,\r\n  toList,\r\n  isNode,\r\n  toNode,\r\n  getNodeAt,\r\n  getLength,\r\n  getChildren,\r\n  getChildrenByName,\r\n  hasChildren,\r\n  hasChild,\r\n  getChildAt,\r\n  getAttributes,\r\n  hasAttribute,\r\n  getAttributeValue,\r\n  getName,\r\n  getText,\r\n  getNodeParent,\r\n  getNodeRoot,\r\n  validateRoot,\r\n};\r\n"],"names":["isList","node","Array","HTMLCollection","NodeList","toList","args","length","list","index","part","push","call","isNode","HTMLElement","toNode","getChildren","children","name","toLowerCase","child","nodeName","childElementCount","hasAttributes","attributes","hasAttribute","getAttribute","innerText","parentNode","getRootNode","root","undefined","document","firstElementChild","querySelector"],"mappings":"oMAAA,MAAMA,EAAUC,GACdA,aAAgBC,OACbD,aAAgBE,gBAChBF,aAAgBG,SAGfC,EAAS,IAAIC,WACXC,OAAEA,GAAWD,GACZL,GAAQK,KAEA,IAAXC,GAAgBP,EAAOC,UAClBA,QAGHO,SAED,IAAIC,EAAQ,EAAGA,EAAQF,EAAQE,IAAS,OACrCC,EAAOJ,EAAKG,GACdT,EAAOU,KACJC,KAAKC,KAAKF,KAEVC,KAAKD,UAIPF,GAGHK,EAAUZ,GAASA,aAAgBa,YAEnCC,EAAUd,GAEVD,EAAOC,GACFA,EAAKM,OAASN,EAAK,GAAK,KAG1BY,EAAOZ,GAAQA,EAAO,KAczBe,EAAef,MACZc,EAAOd,GAGPY,EAAOZ,GAAQA,EAAKgB,SAAWZ,0DAftB,CAACG,EAAMC,EAAQ,IAC3BT,EAAOQ,GACFA,EAAKC,GAGPD,YAGUA,GAASA,EAAKD,uCAUP,CAACN,EAAMiB,OACxBA,EAAKC,oBACNF,EAAWD,EAAYf,IACvBM,OAAEA,GAAWU,MAEdV,SACIU,QAGHT,SAED,IAAIC,EAAQ,EAAGA,EAAQQ,EAASV,OAAQE,IAAS,OAC9CW,EAAQH,EAASR,GACnBW,EAAMC,SAASF,gBAAkBD,KAC9BP,KAAKS,UAIPZ,eAGYP,KAAWc,EAAOd,GAAMqB,2BAE5B,CAACrB,EAAMiB,WAChBD,EAAWD,EAAYf,IACvBM,OAAEA,GAAWU,MAEd,IAAIR,EAAQ,EAAGA,EAAQF,EAAQE,OAC9BQ,EAASR,GAAOY,WAAaH,SACxB,SAIJ,cAGU,CAACjB,EAAMQ,IAAUO,EAAYf,GAAMQ,iBAE/BR,MACdc,EAAOd,IACLsB,gBACAtB,EAAKuB,WAGP,kBAGY,CAACvB,EAAMiB,IAASH,EAAOd,GAAMwB,aAAaP,qBAErC,CAACjB,EAAMiB,IAASH,EAAOd,GAAMyB,aAAaR,WAEnDjB,GAASc,EAAOd,GAAMoB,iBAEtBpB,GAASc,EAAOd,GAAM0B,wBAEhB1B,GAASc,EAAOd,GAAM2B,uBAExB3B,GAASc,EAAOd,GAAM4B,2BAErBC,QACPC,IAATD,GAAsBA,IAASE,SAC1BA,SAASC,kBACS,iBAATH,EACTE,SAASE,cAAcJ,GAGzBA"}