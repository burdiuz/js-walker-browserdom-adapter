{"version":3,"file":"index.js","sources":["source/index.js"],"sourcesContent":["const isList = (node) => (\r\n  node instanceof Array\r\n  || node instanceof HTMLCollection\r\n  || node instanceof NodeList\r\n);\r\n\r\nconst toList = (...args) => {\r\n  const { length } = args;\r\n  const [node] = args;\r\n\r\n  if (length === 1 && isList(node)) {\r\n    return node;\r\n  }\r\n\r\n  const list = [];\r\n\r\n  for (let index = 0; index < length; index++) {\r\n    const part = args[index];\r\n    if (isList(part)) {\r\n      list.push.call(part);\r\n    } else {\r\n      list.push(part);\r\n    }\r\n  }\r\n\r\n  return list;\r\n};\r\n\r\nconst isNode = (node) => node instanceof HTMLElement;\r\n\r\nconst toNode = (node) => {\r\n  // if list we use only first node\r\n  if (isList(node)) {\r\n    return node.length ? node[0] : null;\r\n  }\r\n\r\n  return isNode(node) ? node : null;\r\n};\r\n\r\nconst getNodeAt = (list, index = 0) => {\r\n  if (isList(list)) {\r\n    return list[index];\r\n  }\r\n\r\n  return list;\r\n};\r\n\r\nconst getLength = (list) => list.length;\r\n\r\nconst getName = (node) => toNode(node).nodeName;\r\n\r\n// Node\r\nconst getChildren = (node) => {\r\n  node = toNode(node);\r\n\r\n  // if not a node, return empty list\r\n  return isNode(node) ? node.children : toList();\r\n};\r\n\r\nconst getChildrenByName = (node, name) => {\r\n  name = name.toLowerCase();\r\n  const children = getChildren(node);\r\n  const { length } = children;\r\n\r\n  if (!length) {\r\n    return children;\r\n  }\r\n\r\n  const list = [];\r\n\r\n  for (let index = 0; index < children.length; index++) {\r\n    const child = children[index];\r\n    if (child.nodeName.toLowerCase() === name) {\r\n      list.push(child);\r\n    }\r\n  }\r\n\r\n  return list;\r\n};\r\n\r\nconst hasChild = (node, name) => {\r\n  const children = getChildren(node);\r\n  const { length } = children;\r\n\r\n  for (let index = 0; index < length; index++) {\r\n    if (children[index].nodeName === name) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nconst getChildAt = (node, index) => getChildren(node)[index];\r\n\r\nconst getNodeParent = (node) => toNode(node).parentNode;\r\n\r\nconst getNodeRoot = (node) => toNode(node).getRootNode();\r\n\r\nconst validateRoot = (root) => {\r\n  if (root === undefined || root === document) {\r\n    return document.firstElementChild;\r\n  }\r\n\r\n  if (typeof root === 'string') {\r\n    return document.querySelector(root);\r\n  }\r\n\r\n  return root;\r\n};\r\n\r\nexport default {\r\n  isList,\r\n  toList,\r\n  isNode,\r\n  toNode,\r\n  getNodeAt,\r\n  getLength,\r\n  getName,\r\n  getChildren,\r\n  getChildrenByName,\r\n  hasChild,\r\n  getChildAt,\r\n  getNodeParent,\r\n  getNodeRoot,\r\n  validateRoot,\r\n};\r\n"],"names":["isList","node","Array","HTMLCollection","NodeList","toList","args","length","list","index","part","push","call","isNode","HTMLElement","toNode","getNodeAt","getLength","getName","nodeName","getChildren","children","getChildrenByName","name","toLowerCase","child","hasChild","getChildAt","getNodeParent","parentNode","getNodeRoot","getRootNode","validateRoot","root","undefined","document","firstElementChild","querySelector"],"mappings":"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"}